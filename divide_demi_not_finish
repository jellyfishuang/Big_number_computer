#include <iostream>
#include <string>
#include <vector>
#include <sstream>

using namespace std;

int main()
{
	string a, b;
	while (cin >> a >> b)
	{
		//對小數點做處理  記錄小數點所在位置並刪除小數點
		int a_spot;
		int b_spot;
		int flag_a_spot = 0;
		int flag_b_spot = 0;
		for (int i = 0; i < a.size() - 1; i++)
		{
			if (a[i] == '.')
			{
				a_spot = i;
				flag_a_spot = 1;
			}
			if (flag_a_spot == 1)
			{
				a[i] = a[i + 1];
			}
		}
		if(flag_a_spot==1)
			a.pop_back();
		for (int i = 0; i < b.size()-1; i++)
		{
			if (b[i] == '.')
			{
				b_spot = i;
				flag_b_spot = 1;
			}
			if (flag_b_spot == 1)
			{
				b[i] = b[i + 1];
			}
		}
		if(flag_b_spot==1)
			b.pop_back();

		//把被除數後面加上0 滿足小數點後共100位 為預留除法準備
		for (int i = a_spot; i < 100; i++)
			a = a + "0";
		int a_len = a.size();
		int b_len = b.size();
		
		//處理負號
		int a_negative = 0;
		int b_negative = 0;
		if (a[0] == '-')
		{
			a_negative = 1;
			for (int i = 1; i < a_len; i++)
			{
				a[i - 1] = a[i];
				//cout << a[i];
			}
			a.resize(a_len - 1);
			a_len = a.size();
		}
		if (b[0] == '-')
		{
			b_negative = 1;
			for (int i = 1; i < b_len; i++)
			{
				b[i - 1] = b[i];
			}
			b.resize(b_len - 1);
			b_len = b.size();
		}

		//補0
		while (a_len % 4 != 0)
		{
			a.insert(0, "0");
			a_len = a.size();
		}


		int a_block = a_len / 4;
		vector<int> a_int;
		int b_int = 0;
		vector<int> ans;
		//a切割
		for (int i = 0; a_block != 0; a_block--)
		{
			a_int.push_back((a[i] - 48) * 1000 + (a[i + 1] - 48) * 100 + (a[i + 2] - 48) * 10 + (a[i + 3] - 48) * 1);
			i = i + 4;
		}
		//b轉整數
		for (int i = 0; i < b_len; i++)
		{
			b_int += (b[i] - '0') * pow(10, b_len - 1 - i);
		}

		int tep, remain = 0;
		//做除法
		for (int i = 0; i < a_int.size(); i++)
		{
			tep = a_int[i] + remain;
			if ((tep / b_int) < 1000 && (tep / b_int) > 100)		//特別除錯 用於可能少一個0的情況
				ans.push_back(0);
			ans.push_back(tep / b_int);
			remain = (tep%b_int) * 10000;
		}

		//如果前面有負號 補負號或負負得正
		if (a_negative == 1 && b_negative == 1)
			;
		else if (a_negative == 1)
			cout << "-";
		else if (b_negative == 1)
			cout << "-";
		else
			;

		//輸出
		string ans_str;
		for (int i = 0; i < ans.size(); i++)
		{
			stringstream ss;
			ss << ans[i];
			ans_str = ans_str + ss.str();
		}

		//對於小數點後多餘的0進行刪除
		int ans_str_len = ans_str.size();
		for (int i = ans_str_len - 1; i != 0; i--)
		{
			if ((ans_str[i]) != '0')
				break;
			else
				ans_str.pop_back();
		}



		cout << ans_str << endl;
	}
	return 0;
}
