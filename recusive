/*
#define ELEMENTS_FOR_COMBINATION 5 //i.e., C(5,4) 
#define DLEMENTS_FOR_CHOICE 4 

#include <iostream>

using namespace std;

void PrintCombination(int *ptr, int n, int r);

int main()
{
	int *arrayPtr = new int[ELEMENTS_FOR_COMBINATION];

	
	//Get all elements for combination 
	for (int i = 0; i < ELEMENTS_FOR_COMBINATION; ++i)
	{
		arrayPtr[i] = i + 1;
		//測試arrayPtr
		//cout << i << " " << arrayPtr[i] << endl;
	}
		
	PrintCombination(arrayPtr, ELEMENTS_FOR_COMBINATION, DLEMENTS_FOR_CHOICE);

	if (arrayPtr != NULL)
		delete[] arrayPtr;

	system("pause");
	return 0;
}

void PrintCombination(int *ptr, int n, int r)
{
	
}
*/
#include<iostream>
#include<vector>
using namespace std;
void c_recur(int k, int n, int m, vector<int> list);
int main()
{
	int m, n;
	cin >> m >> n;
	vector<int> list;
	for (int i = 0; i <= (m - n) && n>0; ++i)
	{
		c_recur(i + 1, n - 1, m, list);
	}
	system("pause");
	return 0;
}
void c_recur(int k, int n, int m, vector<int> list)
{
	list.push_back(k);
	for (int i = k; i <= (m - n) && n>0; ++i)
	{
		c_recur(i + 1, n - 1, m, list);
	}
	if (n == 0)
	{
		for (int i = 0; i<list.size(); ++i)
		{
			cout << list[i] << '\t';
		}
		cout << endl;
	}
}
