// ConsoleApplication1.cpp : 定義主控台應用程式的進入點。
//

#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main()
{
	string a, b;
	while (cin >> a >> b)
	{
		int a_len = a.size();
		int b_len = b.size();
		int a_negative = 0;
		int b_negative = 0;
		//處理負號
		if (a[0] == '-')
		{
			a_negative = 1;
			for (int i = 1; i < a_len; i++)
			{
				a[i-1] = a[i];
				//cout << a[i];
			}
			a.resize(a_len - 1);
			a_len = a.size();
		}
		if (b[0] == '-')
		{
			b_negative = 1;
			for (int i = 1; i < b_len; i++)
			{
				b[i - 1] = b[i];
			}
			b.resize(b_len - 1);
			b_len = b.size();
		}
		//補0
		while (a_len % 4 != 0)
		{
			a.insert(0, "0");
			a_len = a.size();
		}

		int a_block = a_len / 4;
		vector<int> a_int;
		int b_int = 0;
		vector<int> ans;
		//a切割
		for (int i = 0; a_block != 0; a_block--)
		{
			a_int.push_back((a[i] - 48) * 1000 + (a[i + 1] - 48) * 100 + (a[i + 2] - 48) * 10 + (a[i + 3] - 48) * 1);
			i = i + 4;
		}
		//b轉整數
		for (int i = 0; i < b_len; i++)
		{
			b_int += (b[i] - 48) * pow(10, b_len - 1 - i);
		}

		int tep, remain = 0;
		//做除法
		for (int i = 0; i < a_int.size(); i++)
		{
			tep = a_int[i] + remain;
			ans.push_back(tep / b_int);
			remain = (tep%b_int) * 10000;
		}
		//如果前面有負號 補負號或負負得正
		if (a_negative == 1 && b_negative == 1)
			;
		else if (a_negative == 1)
			cout << "-" ;
		else if (b_negative == 1)
			cout << "-" ;
		else
			;
		//輸出
		for (int i = 0; i < ans.size(); i++)
		{
			if (ans[0] == 0)
				i++;
			cout << ans[i];
		}
		cout << endl;
	}
    return 0;
}

